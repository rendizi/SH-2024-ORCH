generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  email     String     @unique
  password  String
  createdAt DateTime   @default(now())
  services  Service[]
  telegrams Telegram[]
}

model Telegram {
  id         Int      @id @default(autoincrement())
  telegramId Int
  userId     Int
  createdAt  DateTime @default(now())
  user       User     @relation(fields: [userId], references: [id])
}

model Service {
  id           Int          @id @default(autoincrement())
  ip           String
  domain       String
  userId       Int
  createdAt    DateTime     @default(now())
  reports      Report[]
  user         User         @relation(fields: [userId], references: [id])
  technologies Technology[]
}

model Technology {
  id        Int     @id @default(autoincrement())
  name      String
  serviceId Int
  service   Service @relation(fields: [serviceId], references: [id])
}

model Exploit {
  id               Int      @id @default(autoincrement())
  vulnerability_id String   @unique
  title            String
  description      String
  publication_date String
  source_link      String
  score            Float
  type             String
  createdAt        DateTime @default(now())
  reports          Report[]
}

model Report {
  id        Int      @id @default(autoincrement())
  exploitId Int
  serviceId Int
  verdict   String
  createdAt DateTime @default(now())
  agentId   Int
  agent     Agent    @relation(fields: [agentId], references: [id])
  exploit   Exploit  @relation(fields: [exploitId], references: [id])
  service   Service  @relation(fields: [serviceId], references: [id])
  steps     Step[]
}

model Step {
  id       Int      @id @default(autoincrement())
  reportId Int
  command  String
  output   String
  ranAt    DateTime
  report   Report   @relation(fields: [reportId], references: [id])
}

model Agent {
  id         Int      @id @default(autoincrement())
  ip         String
  status     String
  lastActive DateTime
  createdAt  DateTime @default(now())
  reports    Report[]
}
